{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","active","to","name","Message","message","maxLength100","maxLengthCreator","ReduxAddMassageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","data","key","messagesElements","messagesData","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","console","log","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,oBCA9ID,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,iHCabC,EAVI,SAACC,GAClB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACE,yBAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,QAC3C,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,Q,kBCFjBC,EAJC,SAACT,GACf,OAAO,yBAAKG,UAAWC,IAAOM,SAAUV,EAAMU,U,iCCgC1CC,EAAeC,YAAiB,IAmBhCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACd,GACtB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEV,KAAK,iBACLW,UAAWC,IACXC,YAAY,qBACZC,SAAU,CAACC,IAAeZ,MAG9B,6BACE,6CAUOa,EAhDC,SAACxB,GACf,IAAIyB,EAAQzB,EAAM0B,YAOZC,EAAkBF,EAAMG,YAAYC,KAAI,SAACC,GAAD,OAC5C,kBAAC,EAAD,CAAYtB,KAAMsB,EAAKtB,KAAMN,GAAI4B,EAAK5B,GAAI6B,IAAKD,EAAK5B,QAGhD8B,EAAmBP,EAAMQ,aAAaJ,KAAI,SAACC,GAAD,OAC9C,kBAAC,EAAD,CAASpB,QAASoB,EAAKpB,QAASqB,IAAKD,EAAK5B,QAG5C,OACE,yBAAKC,UAAWC,IAAO8B,SACrB,yBAAK/B,UAAWC,IAAO+B,cAAeR,GACtC,yBAAKxB,UAAWC,IAAOgC,UAAWJ,GAClC,kBAACnB,EAAD,CAAqBG,SAjBH,SAACqB,GACrBrC,EAAMsC,YAAYD,EAAOE,gBACzBC,QAAQC,IAAIJ,Q,uDCZZK,EAA6B,SAACjB,GAAD,MAAY,CAC3CkB,OAAQlB,EAAMmB,KAAKD,SCkBNE,sBACbC,aAhBoB,SAACrB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YACnBa,eAAgBd,EAAMC,YAAYa,mBAIb,SAACQ,GACxB,MAAO,CACLT,YAAa,SAACC,GACZQ,EAASC,YAAmBT,UDVF,SAACU,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKnD,MAAM2C,OACT,kBAACM,EAAcE,KAAKnD,OADI,kBAAC,IAAD,CAAUO,GAAG,eAHH,GACb6C,IAAMH,WAWtC,OAJqCH,YAAQJ,EAARI,CACnCI,KCMWL,CAGbrB","file":"static/js/4.a7750237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1lsqY\",\"dialogsItems\":\"Dialogs_dialogsItems__2Q8wc\",\"active\":\"Dialogs_active__DdSlx\",\"messages\":\"Dialogs_messages__3_WJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3OXdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3SA4p\"};","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  const path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={styles.dialog + ' ' + styles.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={styles.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {\r\n  requiredField,\r\n  maxLengthCreator,\r\n} from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  const addNewMassage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n    console.log(values);\r\n  };\r\n\r\n  const dialogsElements = state.dialogsData.map((data) => (\r\n    <DialogItem name={data.name} id={data.id} key={data.id} />\r\n  ));\r\n\r\n  const messagesElements = state.messagesData.map((data) => (\r\n    <Message message={data.message} key={data.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <div className={styles.messages}>{messagesElements}</div>\r\n      <ReduxAddMassageForm onSubmit={addNewMassage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(50);\r\nconst AddMassageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name='newMessageBody'\r\n          component={Textarea}\r\n          placeholder='Enter your message'\r\n          validate={[requiredField, maxLength100]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxAddMassageForm = reduxForm({form: 'dialogAddMassageForm'})(\r\n  AddMassageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from '../Dialogs/Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\n\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    newMessageBody: state.dialogsPage.newMessageBody,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}